;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; 4 Op-blocks world
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define (hierarchy nav-switch)
  (:type :strips-hierarchy)
  (:hla act
       :parameters (?cx - xc ?cy - yc ?gx - xc ?gy - yc)
       :precondition (and (goal-atx ?gx) (goal-aty ?gy) (atx ?cx) (aty ?cy))
       :refinement   (:expansion    ((go-h ?cx ?cy ?gx ?gy)))    
       :refinement   (:expansion    ((go-v ?cx ?cy ?gx ?gy)))    
       :optimistic   (:opt 0)
       :pessimistic  (:pess))
       
  (:hla go-h
       :parameters (?cx - xc ?cy - yc ?dx - xc ?dy - yc)
       :precondition (and (horiz))
       :refinement (:expansion ((nav-h ?cx ?cy ?dx ?dy)))
       :refinement (:parameters (:?1 - xc :?2 - yc)
		    :precondition (and (switch-at :?1 :?2))
                    :expansion ((nav-h ?cx ?cy :?1 :?2) (flip-v :?1 :?2) (go-v :?1 :?2 ?dx ?dy)))
       :optimistic   (:ncstrips (:effect (and (atx ?dx) (aty ?dy) (not (atx ?cx)) (not (aty ?cy))) 
                                 :possible-effect (and (horiz) (not (horiz))) 
                                 :cost-expr (* 2 (+ (util/symbol-abs-diff ?dx ?cx 1)
                                                  (util/symbol-abs-diff ?dy ?cy 1)))))
       :pessimistic  (:ncstrips (:effect (and (atx ?dx) (aty ?dy) (not (atx ?cx)) (not (aty ?cy))) 
                                 :possible-effect (and (horiz) (not (horiz))) 
                                 :cost-expr (* 4 (+ (util/symbol-abs-diff ?dx ?cx 1)
                                                    (util/symbol-abs-diff ?dy ?cy 1))))))
  
  (:hla go-v
       :parameters (?cx - xc ?cy - yc ?dx - xc ?dy - yc)
       :precondition (and (not (horiz)))
       :refinement (:expansion ((nav-v ?cx ?cy ?dx ?dy)))
       :refinement (:parameters (:?1 - xc :?2 - yc)
		    :precondition (and (switch-at :?1 :?2)) 
                    :expansion ((nav-v ?cx ?cy :?1 :?2) (flip-h :?1 :?2) (go-h :?1 :?2 ?dx ?dy)))
       :optimistic   (:ncstrips (:effect (and (atx ?dx) (aty ?dy) (not (atx ?cx)) (not (aty ?cy))) 
                                 :possible-effect (and (horiz) (not (horiz))) 
                                 :cost-expr (* 2 (+ (util/symbol-abs-diff ?dx ?cx 1)
                                                  (util/symbol-abs-diff ?dy ?cy 1)))))
       :pessimistic  (:ncstrips (:effect (and (atx ?dx) (aty ?dy) (not (atx ?cx)) (not (aty ?cy))) 
                                 :possible-effect (and (horiz) (not (horiz))) 
                                 :cost-expr (* 4 (+ (util/symbol-abs-diff ?dx ?cx 1)
                                                    (util/symbol-abs-diff ?dy ?cy 1))))))
       
  (:hla nav-h       
       :parameters (?cx - xc ?cy - yc ?dx - xc ?dy - yc)
       :precondition (and (horiz))
       :refinement (:precondition (and (atx ?dx) (aty ?dy)) :expansion ())
       :refinement (:parameters (:? - yc) :expansion ((bad-up     ?cy :?) (nav-h ?cx :? ?dx ?dy)))
       :refinement (:parameters (:? - yc) :expansion ((bad-down   ?cy :?) (nav-h ?cx :? ?dx ?dy)))
       :refinement (:parameters (:? - xc) :expansion ((good-left  ?cx :?) (nav-h :? ?cy ?dx ?dy)))
       :refinement (:parameters (:? - xc) :expansion ((good-right ?cx :?) (nav-h :? ?cy ?dx ?dy)))
       :exact        (:ncstrips (:effect (and (atx ?dx) (aty ?dy) (not (atx ?cx)) (not (aty ?cy))) 
                                 :cost-expr (+ (* 2 (util/symbol-abs-diff ?dx ?cx 1))
                                               (* 4 (util/symbol-abs-diff ?dy ?cy 1))))))

  (:hla nav-v       
       :parameters (?cx - xc ?cy - yc ?dx - xc ?dy - yc)
       :precondition (and (not (horiz)))
       :refinement (:precondition (and (atx ?dx) (aty ?dy)) :expansion ())
       :refinement (:parameters (:? - xc) :expansion ((bad-left   ?cx :?) (nav-v :? ?cy ?dx ?dy)))
       :refinement (:parameters (:? - xc) :expansion ((bad-right  ?cx :?) (nav-v :? ?cy ?dx ?dy)))
       :refinement (:parameters (:? - yc) :expansion ((good-up    ?cy :?) (nav-v ?cx :? ?dx ?dy)))
       :refinement (:parameters (:? - yc) :expansion ((good-down  ?cy :?) (nav-v ?cx :? ?dx ?dy)))
       :exact        (:ncstrips (:effect (and (atx ?dx) (aty ?dy) (not (atx ?cx)) (not (aty ?cy))) 
                                 :cost-expr (+ (* 4 (util/symbol-abs-diff ?dx ?cx 1))
                                               (* 2 (util/symbol-abs-diff ?dy ?cy 1))))))
  )

