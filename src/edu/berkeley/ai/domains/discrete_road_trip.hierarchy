;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Discrete road trip
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Playing some dirty tricks with valuations and descriptions here...


(define (hierarchy discrete-road-trip)
  (:type :strips-hierarchy)
  (:hla act
       :parameters   (?cx - loc ?zero - gas ?maxg - gas)
       :precondition (and (at ?cx) (zero ?zero) (max-gas ?maxg))
       :refinement   (:expansion ())    
       :refinement   (:parameters (?dx - loc ?l - gas ?p - price)
		      :precondition (and (gas-price ?cx ?p) (road-length ?cx ?dx ?l))
		      :expansion ((next-stop ?cx ?dx ?l ?p ?zero ?maxg) (act ?dx ?zero ?maxg)))    
       :refinement   (:parameters (?dx - loc ?l - gas)
		      :precondition (and (no-gas ?cx)
					 (road-length ?cx ?dx ?l))
		      :expansion ((drive-to ?cx ?dx ?l) (act ?dx ?zero ?maxg)))    
       :optimistic   (:opt 0)
       :pessimistic  (:pess))


  (:hla next-stop
       :parameters   (?cx - loc ?dx - loc ?dist - gas ?p - price ?ming - gas ?maxg - gas)
       :refinement   (:parameters (?med - gas)
		      :precondition (and (median ?ming ?med ?maxg))
		      :expansion ((next-stop ?cx ?dx ?dist ?p ?med ?maxg)))    
       :refinement   (:parameters (?med - gas ?dmed - gas)
		      :precondition (and (median ?ming ?med ?maxg) (one-greater ?med ?dmed) (not (gas= ?med ?dmed)))
		      :expansion ((next-stop ?cx ?dx ?dist ?p ?ming ?dmed)))    
       :refinement   (:precondition (gas= ?ming ?maxg)
		      :expansion ((fill-up ?cx ?p ?ming) (drive-to ?cx ?dx ?dist)))    
       :optimistic   (:ncstrips
		      (:precondition (forall (?cg - gas ?fg - gas)
					     (and (gas ?cg) (overflow-sum ?cg ?maxg ?fg))
					     (geq ?fg ?dist))
		       :effect       (and (not (at ?cx))
					  (at ?dx) (visited ?dx)
				          (forall (?cg - gas ?fg - gas ?ag - gas) 
						  (and (gas ?cg) (overflow-sum ?cg ?maxg ?fg) (sum ?ag ?dist ?fg))
						  (and (not (gas ?cg)) (gas ?ag))))
		       :cost-expr    (+ (* 5 ?dist) (* -1 ?p ?ming))))
       :pessimistic  (:ncstrips
		      (:precondition (forall (?cg - gas ?fg - gas)
					     (and (gas ?cg) (overflow-sum ?cg ?maxg ?fg))
					     (geq ?fg ?dist))
		       :effect       (and (not (at ?cx))
					  (at ?dx) (visited ?dx)
				          (forall (?cg - gas ?fg - gas ?ag - gas) 
						  (and (gas ?cg) (overflow-sum ?cg ?maxg ?fg) (sum ?ag ?dist ?fg))
						  (and (not (gas ?cg)) (gas ?ag))))
		       :cost-expr    (+ (* 5 ?dist) (* -1 ?p ?maxg))))
       )  


  (:hla fill-up
       :parameters   (?cx - loc ?p - price ?g - gas)
       :refinement   (:precondition (zero ?g)
		      :expansion ())
       :refinement   (:parameters (?dg - gas ?cg - gas ?fg - gas)
		      :precondition (overflow-sum ?cg ?g ?fg)
		      :expansion ((get-gas ?cx ?p ?cg ?fg)))
       :exact        (:ncstrips
		      (:effect       (forall (?cg - gas ?fg - gas) 
					     (and (gas ?cg) (overflow-sum ?cg ?g ?fg))
					     (and (not (gas ?cg)) (gas ?fg)))
		       :cost-expr (* -1 ?p ?g))))


  (:hla drive-to
       :parameters   (?cx - loc ?dx - loc ?dist - gas)
       :refinement   (:parameters (?cg - gas ?fg - gas)
		      :expansion ((drive ?cx ?dx ?cg ?dist ?fg)))
       :exact        (:ncstrips
		      (:precondition (forall (?cg - gas) (gas ?cg) (geq ?cg ?dist)) 
		       :effect       (and (not (at ?cx))
					  (at ?dx) (visited ?dx)
					  (forall (?cg - gas ?fg - gas) 
						  (and (gas ?cg) (sum ?fg ?dist ?cg))
						  (and (not (gas ?cg)) (gas ?fg))))
		       :cost-expr (* 5 ?dist))))
   )

