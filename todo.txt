;;; Today

hybrid dnf + ncstrips + tests
hybrid strips hierarchies.

TODO: don't add vars to LP if consted, at least. (also in fixed-lp-vals)
;; TODO: handle abs var hints.
   
Strict inequalities on move actions with current hierarchy may prevent
picking up / dropping blocks already flush with top; moreover, with
nonzero switching cost, current hierarchy is suboptimal.

Add handling of guaranteed objects to smart-csps, so we can use
foralls in preconditions.

;;;;;;;;;;;;;;;; Implement

Hybrid Speedups
Hybrid heuristics
Hybrid convergence.  

TWO approaches to hybrid; LP splitting, vs. MIP.

Heuristic for hybrid blocks
 - Allow absolute value in cost expressions. ?  Can minimize absolute
 values, can't maximize them.  

;; Look at incanter/ clojueratica
;; Consider MIPS as representation for valuations.

; Combine LPs, 

; Batch changes to LPs, so we don't do lots of unnecessary solves. 

;; TODO: heuristics
 ;; TODO: absolute values.

;; TODO: when we commit to a provably optimal high-level plan, 
we should also commit to these state variable values...

;; Allow for exact descriptions
;; Upper bounds rather than solving LPs? 


Remember: strips, flat hierarchy uses successor generator for primitives; flat-strips
hierarchy uses smart-csp.

;; Domains
trading game (cities, items, capacities)
parking

;;;;;;;;;;;;;;;; General TODO

think about implicit pruning (i.e., decomposition, etc.)

Subgoal caching / plan tying (i.e., cost for X at least cost for Y -
distance to Y from X).   

Warehouse hierarchy doesn't allow move(b,c,c), which could be needed to get
through tall stack.  

Think about connection between hierarchical methods and first-order
theorem proving.  Pessimistic descriptions are not pure logical
statements ! 
 
Later

Handle duplicate plans properly in full graph.

Fix regression for simple valuations ?

Add NCStrips tests.

Fancier PDF display ?

Ideas on probabilistic descriptions, synthesis, starting with flat
hierarchy, learning descriptions, macros, hierarchies bottom up.
Useful HLAs are ones with high success probability, low computational
complexity.   All of these things are context-sensitive, can be
imprecise, except for solid opt/pess descriptions.  

Check up on forall conditions in NCSTRIPS.

