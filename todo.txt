Split-set for ALG

Pessimistic for ALG.

Fancier PDF display ?

Check what happens with no refinements

TODO: cut things out of graph!!

If doing fancy valuation tricks, much watch out for
identitydescrpition, conditional, ...

Might as well store provenance too, for regression ...
... and implement incremental progression/merging?
 -- But problem with provenance is things may be OK even if 
    valuation is out of date, in which case chain is invalid
    ... . . . . ...?

ALGs should have some mode for finding suboptimal plans.

Understanding decomposed planning.

OR-nodes must store: 
	  four optimistic valuations
          two pessimistic valuations
	  two states
          Final progressed 

who picks states ?

Why did we need states in the first place?
 Could refine HLA with biggest gap,
 Best option already known. 
 - Need it to make consistent "best" choices at OR-nodes.

We can get away with regressing only states, not sets.
Question: when a val changes, how can we repair optimal path????

Formulate as ALT with two types of nodes: progress node and merge
node.

(Clauses record provenance.  Assume optimsitic consistency.  rewards
always go down.  Can only affect some subest of progressed results.
By decreasing reward by x for decreased by x, or by anything for
killed state.)




Ideas on probabilistic descriptions, synthesis, starting with flat
hierarchy, learning descriptions, macros, hierarchies bottom up.
Useful HLAs are ones with high success probability, low computational
complexity.   All of these things are context-sensitive, can be
imprecise, except for solid opt/pess descriptions.  

TODO: figure out what to do with forall conditions in NCSTRIPS.

